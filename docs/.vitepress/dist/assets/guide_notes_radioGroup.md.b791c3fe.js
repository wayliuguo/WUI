import{_ as a,o as s,c as n,O as e}from"./chunks/framework.ff144929.js";const A=JSON.parse('{"title":"RadioGroup","description":"","frontmatter":{},"headers":[],"relativePath":"guide/notes/radioGroup.md"}'),l={name:"guide/notes/radioGroup.md"},o=e(`<h1 id="radiogroup" tabindex="-1">RadioGroup <a class="header-anchor" href="#radiogroup" aria-label="Permalink to &quot;RadioGroup&quot;">​</a></h1><h2 id="props" tabindex="-1">props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;props&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">export const radioGroupProps = {</span></span>
<span class="line"><span style="color:#A6ACCD;">  disabled: Boolean,</span></span>
<span class="line"><span style="color:#A6ACCD;">  iconSize: numericProp,</span></span>
<span class="line"><span style="color:#A6ACCD;">  direction: String as PropType&lt;RadioGroupDirection&gt;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  modelValue: unknownProp,</span></span>
<span class="line"><span style="color:#A6ACCD;">  checkedColor: String</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">export type RadioGroupProps = ExtractPropTypes&lt;typeof radioGroupProps&gt;</span></span></code></pre></div><h2 id="emits" tabindex="-1">emits <a class="header-anchor" href="#emits" aria-label="Permalink to &quot;emits&quot;">​</a></h2><ul><li><code>emits</code>配置项，用于声明组件所支持的自定义事件。</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">emits: [&#39;change&#39;, &#39;update:modelValue&#39;]</span></span></code></pre></div><h2 id="setup" tabindex="-1">setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;setup&quot;">​</a></h2><h2 id="injection" tabindex="-1">injection <a class="header-anchor" href="#injection" aria-label="Permalink to &quot;injection&quot;">​</a></h2><ul><li>使用 <code>InjectionKey</code> 指定注入的类型。</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">export type RadioGroupProvide = {</span></span>
<span class="line"><span style="color:#A6ACCD;">  props: RadioGroupProps</span></span>
<span class="line"><span style="color:#A6ACCD;">  updateValue: (value: unknown) =&gt; void</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">export const RADIO_KEY: InjectionKey&lt;RadioGroupProvide&gt; = Symbol(&#39;radio-group&#39;)</span></span></code></pre></div><h2 id="usechildren" tabindex="-1">useChildren <a class="header-anchor" href="#usechildren" aria-label="Permalink to &quot;useChildren&quot;">​</a></h2><ul><li>使用 <a href="hooks.html#useChildren.ts">useChildren</a></li><li>通过<code>linkChildren</code>，导出方法和值。</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">const { linkChildren } = useChildren(RADIO_KEY)</span></span>
<span class="line"><span style="color:#A6ACCD;">const updateValue = (value: unknown) =&gt; emit(&#39;update:modelValue&#39;, value)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">linkChildren({</span></span>
<span class="line"><span style="color:#A6ACCD;">  props,</span></span>
<span class="line"><span style="color:#A6ACCD;">  updateValue</span></span>
<span class="line"><span style="color:#A6ACCD;">})</span></span></code></pre></div><h2 id="watch" tabindex="-1">watch <a class="header-anchor" href="#watch" aria-label="Permalink to &quot;watch&quot;">​</a></h2><ul><li>根据绑定值的变更触发<code>change</code></li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">watch(</span></span>
<span class="line"><span style="color:#A6ACCD;">  () =&gt; props.modelValue,</span></span>
<span class="line"><span style="color:#A6ACCD;">  value =&gt; emit(&#39;change&#39;, value)</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="usecustomfieldvalue" tabindex="-1">useCustomFieldValue <a class="header-anchor" href="#usecustomfieldvalue" aria-label="Permalink to &quot;useCustomFieldValue&quot;">​</a></h2><ul><li><a href="./hooks.html#usecustomfieldvalue">useCustomFieldValue</a></li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">useCustomFieldValue(() =&gt; props.modelValue)</span></span></code></pre></div><h2 id="render" tabindex="-1">render <a class="header-anchor" href="#render" aria-label="Permalink to &quot;render&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">return () =&gt; (</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;div</span></span>
<span class="line"><span style="color:#A6ACCD;">    class={[bem.b(), props.direction &amp;&amp; bem.m(props.direction)]}</span></span>
<span class="line"><span style="color:#A6ACCD;">    role=&quot;radiogroup&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    {slots.default?.()}</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;/div&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="style" tabindex="-1">style <a class="header-anchor" href="#style" aria-label="Permalink to &quot;style&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">.w-radio-group {</span></span>
<span class="line"><span style="color:#A6ACCD;">  &amp;--horizontal {</span></span>
<span class="line"><span style="color:#A6ACCD;">    display: flex;</span></span>
<span class="line"><span style="color:#A6ACCD;">    flex-wrap: wrap;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div>`,23),p=[o];function t(i,r,c,d,u,C){return s(),n("div",null,p)}const y=a(l,[["render",t]]);export{A as __pageData,y as default};
